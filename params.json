{"name":"RHAddressBook","tagline":"A Cocoa / Objective-C library for interfacing with the iOS AddressBook.","body":"## RHAddressBook\r\nA Cocoa / Objective-C library for interfacing with the iOS AddressBook with added geocoding support. \r\n\r\n* All attributes on various objects are exposed as properties, allowing for simple Obj-C code. (No more dealing with CF methods etc )\r\n* Built in support for background Geocoding with an in-built persistent cache. (iOS5+ only) \r\n* vCard import and export for single and multiple people.\r\n* Access to all underlying ABRecordRefs & ABAddressBookRefs etc.\r\n* Maintains an underlying thread for each ab instance in-order to ensure thread safety.\r\n* Sends NSNotifications when ab has changed.\r\n* Geocoding is disabled by default. (See RH_AB_INCLUDE_GEOCODING)\r\n\r\n\r\n### Bonus Features\r\n* Unit Tests.\r\n* Basic Demo App.\r\n\r\n## Classes\r\n* RHAddressBook\r\n* RHSource - Representation of various address-book sources found on the iPhone\r\n* RHGroup\r\n* RHPerson - Represents a person in the addressbook. \r\n* RHMultiValue - Represents multiple key/value pairs. Used for RHPersons addresses etc.\r\n\r\n## Getting Started\r\nInclude RHAddressBook in your iOS project.\r\n\r\n```objectivec\r\n    #import <RHAddressBook/AddressBook.h>\r\n```\r\nGetting an instance of the addressbook.\r\n\r\n```objectivec\r\n    RHAddressBook *ab = [[[RHAddressBook alloc] init] autorelease];\r\n```\r\nSupport for iOS6+ authorization \r\n\r\n```objectivec\r\n    //query current status, pre iOS6 always returns Authorized\r\n    if ([RHAddressBook authorizationStatus] == RHAuthorizationStatusNotDetermined){\r\n    \r\n    \t//request authorization\r\n        [ab requestAuthorizationWithCompletion:^(bool granted, NSError *error) {\r\n            [abViewController setAddressBook:ab];\r\n        }];\r\n    }\r\n```\r\nRegistering for addressbook changes \r\n\r\n```objectivec\r\n    [[NSNotificationCenter defaultCenter]  addObserver:self selector:@selector(addressBookChanged:) name:RHAddressBookExternalChangeNotification object:nil];\r\n```\r\nGetting sources.\r\n\r\n```objectivec\r\n    NSArray *sources = [ab sources];\r\n    RHSource *defaultSource = [ab defaultSource];\r\n```\r\nGetting a list of groups.\r\n\r\n```objectivec\r\n    NSArray *groups = [ab groups];\r\n    long numberOfGroups = [ab numberOfGroups];\r\n    NSArray *groupsInSource = [ab groupsInSource:defaultSource];\r\n    RHGroup *lastGroup = [groups lastObject];\r\n```\r\nGetting a list of people.\r\n\r\n```objectivec\r\n    NSArray *allPeople = [ab people];\r\n    long numberOfPeople = [ab numberOfPeople];\r\n    NSArray *allPeopleSorted = [ab peopleOrderedByUsersPreference];\r\n    NSArray *allFreds = [ab peopleWithName:@\"Fred\"];\r\n    NSArray *allFredsInLastGroup = [lastGroup peopleWithName:@\"Fred\"];\r\n    RHPerson *person = [allPeople lastObject];\r\n```\r\nGetting basic properties on on a person.\r\n\r\n```objectivec\r\n    NSString *department = [person department];\r\n    UIImage *thumbnail = [person thumbnail];\r\n    BOOL isCompany = [person isOrganization];\r\n```\r\nSetting basic properties on a person.\r\n\r\n```objectivec\r\n    person.name = @\"Freddie\";\r\n    [person setImage:[UIImage imageNames:@\"hahaha.jpg\"]];\r\n    person.kind = kABPersonKindOrganization;\r\n    [person save];\r\n```\r\nGetting MultiValue properties on a person.\r\n\r\n```objectivec\r\n    RHMultiDictionaryValue *addressesMultiValue = [person addresses];\r\n    NSString *firstAddressLabel = [RHPerson localizedLabel:[addressesMultiValue labelAtIndex]]; //eg Home\r\n    NSDictionary *firstAddress = [addressesMultiValue valueAtIndex:0];\r\n```\r\nSetting MultiValue properties on a person.\r\n\r\n```objectivec\r\n    RHMultiStringValue *phoneMultiValue = [person phoneNumbers];\r\n    RHMutableMultiStringValue *mutablePhoneMultiValue = [[phoneMultiValue mutableCopy] autorelease];\r\n    if (! mutablePhoneMultiValue) mutablePhoneMultiValue = [[[RHMutableMultiStringValue alloc] initWithType:kABMultiStringPropertyType] autorelease];\r\n    \r\n    //RHPersonPhoneIPhoneLabel casts kABPersonPhoneIPhoneLabel to the correct toll free bridged type, see RHPersonLabels.h\r\n    mutablePhoneMultiValue addValue:@\"+14086655555\" withLabel:RHPersonPhoneIPhoneLabel]; \r\n    person.phonenumbers = mutablePhoneMultiValue;\r\n    [person save];\r\n```\r\nCreating a new person.\r\n\r\n```objectivec\r\n    RHPerson *newPerson = [[ab newPersonInDefaultSource] autorelease]; //added to ab\r\n    RHPerson *newPerson2  = [[[RHPerson newPersonInSource:[ab defaultSource]] autorelease]; //not added to ab\r\n    [ab addPerson:newPerson2];\r\n    NSError* error = nil;\r\n    if (![ab save:&error]) NSLog(@\"error saving: %@\", error);\r\n```\r\nGetting an RHPerson object for an ABRecordRef for editing. (note: RHPerson might not be associated with the same addressbook as the original ABRecordRef)\r\n\r\n```objectivec\r\n    ABRecordRef personRef = ...;\r\n    RHPerson *person = [ab personForRecordRef:personRef];\r\n    if(person){\r\n        person.firstName = @\"Paul\";\r\n        person.lastName = @\"Frank\";\r\n        [person save];\r\n    }\r\n```\r\nPresenting / editing an RHPerson instance in a ABPersonViewController.\r\n\r\n```objectivec\r\n    ABPersonViewController *personViewController = [[[ABPersonViewController alloc] init] autorelease];   \r\n\r\n    //setup (tell the view controller to use our underlying address book instance, so our person object is directly updated on our behalf)\r\n     [person.addressBook performAddressBookAction:^(ABAddressBookRef addressBookRef) {\r\n        personViewController.addressBook =addressBookRef;\r\n    } waitUntilDone:YES];\r\n\r\n    personViewController.displayedPerson = person.recordRef;\r\n    personViewController.allowsEditing = YES;\r\n\r\n    [self.navigationController pushViewController:personViewController animated:YES];\r\n```\r\nBackground geocoding\r\n\r\n```objectivec\r\n    if ([RHAddressBook isGeocodingSupported){\r\n        [RHAddressBook setPreemptiveGeocodingEnabled:YES]; //class method\r\n    }\r\n    float progress = [_addressBook preemptiveGeocodingProgress]; // 0.0f - 1.0f\r\n```\r\nGeocoding results for a person.\r\n\r\n```objectivec\r\n    CLLocation *location = [person locationForAddressID:0];\r\n    CLPlacemark *placemark = [person placemarkForAddressID:0];\r\n```\r\n\r\nFinding people within distance of a location.\r\n\r\n```objectivec\r\n    NSArray *inRangePeople = [ab peopleWithinDistance:5000 ofLocation:location];\r\n    NSLog(@\"people:%@\", inRangePeople);\r\n```\r\n\r\nSaving. (all of the below are equivalent)\r\n\r\n```objectivec\r\n    BOOL changes = [ab hasUnsavedChanges];\r\n    BOOL result = [ab save];\r\n    BOOL result =[source save];\r\n    BOOL result =[group save];\r\n    BOOL result =[person save];\r\n```\r\nReverting changes on objects. (reverts the entire addressbook instance, not just the object revert is called on.)\r\n\r\n```objectivec\r\n    [ab revert];\r\n    [source revert];\r\n    [group revert];\r\n    [person revert];\r\n```\r\nRemember, save often in order to avoid painful save conflicts.\r\n\r\n## Installing\r\nFor instructions on how to get started using this static library see [Using Static iOS Libraries](http://rheard.com/blog/using-static-ios-libraries/) at [rheard.com](http://rheard.com).\r\n\r\n## Licence\r\nReleased under the Modified BSD License. \r\n(Attribution Required)\r\n<pre>\r\nRHAddressBook\r\n\r\nCopyright (c) 2011-2012 Richard Heard. All rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without\r\nmodification, are permitted provided that the following conditions\r\nare met:\r\n1. Redistributions of source code must retain the above copyright\r\nnotice, this list of conditions and the following disclaimer.\r\n2. Redistributions in binary form must reproduce the above copyright\r\nnotice, this list of conditions and the following disclaimer in the\r\ndocumentation and/or other materials provided with the distribution.\r\n3. The name of the author may not be used to endorse or promote products\r\nderived from this software without specific prior written permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR\r\nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\nIN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,\r\nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\r\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\r\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\r\nTHIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n</pre>\r\n\r\n\r\n### iOS Version Support (Executive Summary: Supports iOS 4+, tested on iOS 4.0 - 7.1)\r\nThis Framework code runs and compiles on and has been tested all the way back to iOS 4.0. \r\n\r\nUnit tests are in place that run on all versions between 4.0 and 7.1.\r\n\r\nVarious methods are not available when linking against older SDKs and will return nil when running on older os versions.\r\neg. Geocoding is only supported on iOS 5+. You should always use the +[RHAddressBook isGeocodingAvailable] method to check whether geocoding is available before attempting to access geocode information. Methods will however, if available safely return nil / empty arrays.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}